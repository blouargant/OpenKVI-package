#
# HTTPS server configuration
#
ssl_prefer_server_ciphers   on;

server {
    listen       443;
    server_name  _;
    root /var/lib/tomcat6/webapps/openkvi/;
    ssl on;
    #ssl_certificate cert.crt
    #ssl_certificate_key cert.key
    ssl_certificate /etc/pki/tls/certs/openkvi_server.crt; 
    ssl_certificate_key /etc/pki/tls/private/openkvi_server.key;

    #ssl_session_timeout  5m;

    ssl_protocols  SSLv2 SSLv3 TLSv1;
    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;

    location / {
        proxy_pass http://localhost:8080/;
        proxy_set_header  Host $http_host;
        proxy_set_header  X-Real-IP          $remote_addr;
        proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto  https;
    }
    location /_auth/set {
       if ($host ~ localhost ) {
            content_by_lua '
                local auth_dic = ngx.shared.authenticated
                str = ngx.var.arg_auth
                id_value = string.match(str, "ID:(%w+)")
                ipaddr = string.match(str, "IP:(%d+.%d+.%d+.%d+)")
                auth_dic:set(id_value, ipaddr)
                ngx.say("STORED")
           ';
       }
    }
    location /_auth/unset {
        if ($host ~ localhost ) {
            content_by_lua '
                local auth = ngx.shared.authenticated
                auth:delete(ngx.var.arg_id)
                ngx.say("REMOVED")
            ';
        }
    }
    location /_auth/get {
        if ($host ~ localhost ) {
            content_by_lua '
                local auth_dic = ngx.shared.authenticated
                local status = auth_dic:get(ngx.var.arg_id)
                if status then
                    ngx.say("authenticated")
                else 
                    ngx.say("not authenticated")
                end
                ngx.say(ngx.var.arg_id .. " = " .. auth_dic:get(ngx.var.arg_id))
            ';
        }
    }
}
